#ifndef INDEX_HTML_H
#define INDEX_HTML_H

const char index_html[] PROGMEM = R"rawliteral(<!DOCTYPE html><html lang="en"><head><meta name="viewport" content="width=device-width,initial-scale=1"><meta charset="UTF-8"><style>body{margin-top:100px;background:#2c3e50 url('/fireside.jpg') no-repeat center center fixed;background-size:cover;color:#f39c12;font-family:Arial,sans-serif;text-shadow:1px 1px 2px rgba(0,0,0,0.5)}h1,h2{color:#e67e22;text-align:center}.slider{-webkit-appearance:none;width:80%;height:25px;background:linear-gradient(to right,yellow,red);outline:none;opacity:0.7;-webkit-transition:.2s;transition:opacity .2s;position:relative}.slider::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;width:25px;height:25px;background:#333;cursor:pointer}.slider::-moz-range-thumb{width:25px;height:25px;background:#e74c3c;cursor:pointer}.floating-label{position:absolute;background:rgba(0,0,0,0.7);color:#fff;padding:4px 8px;border-radius:4px;font-size:12px;pointer-events:none;display:none;transform:translateX(-50%);white-space:nowrap;z-index:1000}button,input[type="checkbox"]+label{background-color:#d35400;border:none;color:#fff;padding:10px 24px;text-align:center;text-decoration:none;display:inline-block;font-size:16px;margin:4px 2px;cursor:pointer;border-radius:12px;transition:background-color 0.3s}button:hover,input[type="checkbox"]+label:hover{background-color:#e67e22}#status{background:rgba(0,0,0,0.5);padding:20px;border-radius:10px;margin:20px auto;max-width:500px}#currentSetTemp{position:relative;color:#f1c40f;font-size:1.2em;text-align:center;margin-top:20px}.file-area{background:rgba(0,0,0,0.5);padding:20px;border-radius:10px;margin:20px auto;max-width:500px}table{width:100%;border-collapse:collapse}th,td{border:1px solid #f39c12;padding:8px;text-align:left;background-color:darkred}th{background-color:#d35400}#prime{display:none}#shutdownHeater{position:fixed;top:70px;right:10px;z-index:1001;background-color:#d35400;border:none;color:#fff;padding:5px 10px;text-align:center;text-decoration:none;display:inline-block;font-size:12px;cursor:pointer;border-radius:4px;transition:background-color 0.3s;min-width:50px;min-height:20px}#shutdownHeater:hover{background-color:#e67e22}#thermostatControl{width:110px;position:fixed;top:110px;left:1px;z-index:1}#thermostatControl input[type="checkbox"]{display:none}#thermostatControl label{padding:5px 10px;cursor:pointer;font-size:11.5px;border-radius:4px}#thermostatControl input[type="checkbox"]:checked+label{background-color:#e67e22}#thermostatControl label.active{background-color:#e67e22;width:100%}#frostMode input[type="checkbox"]{display:none}.gauge{width:100%;max-width:80px;font-family:"Roboto",sans-serif;font-size:12px;color:#333;position:fixed;z-index:-10;top:70px;left:10px;margin:0 20px 20px 0}.gauge__body{width:100%;height:0;padding-bottom:50%;background:transparent;position:relative;border-top-left-radius:100% 200%;border-top-right-radius:100% 200%;overflow:hidden}.gauge__fill{position:absolute;top:100%;left:0;width:inherit;height:100%;background:#009578;transform-origin:center top;transform:rotate(0.25turn);transition:transform 0.2s ease-out}.gauge__cover{width:75%;height:150%;background:#ccc;border-radius:50%;position:absolute;top:25%;left:50%;transform:translateX(-50%);display:flex;align-items:center;justify-content:center;padding-bottom:25%;box-sizing:border-box}#walltempbut{background-color:#d35400;border:none;color:#fff;padding:5px 10px;text-align:center;text-decoration:none;display:inline-block;font-size:12px;cursor:pointer;border-radius:4px;transition:background-color 0.3s;min-width:50px;min-height:20px}#heatererror{position:fixed;top:20%;left:50%;transform:translate(-50%,-50%);width:200px;background-color:#000;padding:10px 20px;border-radius:5px;display:none;text-align:center;z-index:1001}#heatererrortxt{display:inline-block;color:red;font-weight:bold;animation:blink 1s infinite}@keyframes blink{0%{opacity:1}50%{opacity:0.5}100%{opacity:1}}#message{position:fixed;bottom:.01%;left:50%;transform:translate(-50%,-50%);width:300px;background-color:#000;padding:5px 10px;border-radius:5px;text-align:center;display:none;z-index:1001}.fan-control{position:relative;display:inline-block;width:150px;height:150px;margin:10px auto;padding:10px}.fan-control canvas{width:100%;height:100%}.gauge-value{position:absolute;top:calc(75% + 10px);left:50%;transform:translateX(-50%);font-size:16px;color:#f39c12;text-shadow:1px 1px 2px rgba(0,0,0,0.5);text-align:center;pointer-events:none}.fan-toggle{border:none;padding:5px 10px;font-size:12px;text-align:center;display:inline-block;cursor:pointer;border-radius:4px;transition:background-color 0.3s;min-width:50px;min-height:20px}</style><link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png"><link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png"><link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png"><link rel="manifest" href="/site.webmanifest"></head><body><button id="shutdownHeater" onclick="shutdownHeater()">Shut Down Heater</button><div id="statusBanner" style="position:fixed;top:0;left:0;width:100%;background:rgba(0,0,0,0.7);color:#f39c12;font-size:12px;padding:5px 0;text-align:center;z-index:1000"><span id="uptime" style="margin:0 5px">Up: <span></span></span><span id="currentTime" style="margin:0 5px"><span></span></span><span id="currentDate" style="margin:0 5px"><span></span></span><span style="margin:0 5px">Temp: <span id="currentTemp">0</span></span><span style="margin:0 5px">State: <span id="heaterState">Unknown</span></span><span style="margin:0 5px">Meter: <span id="runtime">0</span></span><span style="margin:0 5px">Fan: <span id="fanSpeed">0</span></span><span style="margin:0 5px">Volt: <span id="supplyVoltage">0.0</span></span><span style="margin:0 5px">Int Temp: <span id="heaterInternalTemp">0</span></span><span style="margin:0 5px">Glow: <span id="glowPlugCurrent">0</span> A</span><span style="margin:0 5px">Pump: <span id="pumpHz">0</span> Hz</span><span style="margin:0 5px">Glow Hrs: <span id="glowPlugHours">0.00</span></span><span style="margin:0 5px">Wall Temp: <span id="walltemp">0</span></span><span style="margin:0 5px">Duct: <span id="ductfan"></span></span><span style="margin:0 5px">Wall: <span id="wallfan"></span></span><span style="margin:0 5px">Avg: <span id="rollingAvgGPH">0.00</span></span><span style="margin:0 5px">Est Run: <span id="rollingRuntimeHours">0</span></span><span id="voltageWarning" style="margin:0 5px"></span></div><div style="text-align:center" class="gauge"><div class="gauge__body"><div class="gauge__fill" id="fuelGaugeFill"></div><div class="gauge__cover" id="fuelGallonsLeft">0 Gal</div></div></div><div id="thermostatControl"><input type="checkbox" id="thermostatEnable" onchange="toggleThermostat(this.checked)"><label for="thermostatEnable" id="thermostatLabel">Thermostat Off</label></div><div id="heatererror"><span id="heatererrortxt"></span></div><h1>Heater Control</h1><div id="message"></div><div id="currentSetTemp">Set Temperature: <span id="setTemperatureDisplay">60</span>°F<br><input type="range" min="46" max="95" value="60" class="slider" id="tempSlider"></div><div style="text-align:center"><button onclick="setTemp(46)">Frost</button><button onclick="setTemp(60)">Eco</button><button onclick="setTemp(65)">Sleep</button><button onclick="setTemp(71)">Comfort</button></div><div style="text-align:center" id="prime"><button id="primeStart" onclick="primePump('start')">Start Pump Prime</button><button id="primeStop" onclick="primePump('stop')">Stop Pump Prime</button></div><div id="frostMode" style="text-align:center"><input type="checkbox" id="frostMode" onchange="toggleFrostMode(this.checked)"><label for="frostMode">Frost Mode</label></div><div style="text-align:center" class="walltemp"><h2>Wall Fan Control</h2><p>Delta: <span id="currentWallTempTrigger">0</span>°F<input type="number" id="wallTempTriggerInput" min="-1" max="10" step="1" value=""><button id="walltempbut" onclick="setWallTempTrigger()">Update</button></p><div><h3>Fan Control</h3><p id="fanStatus" style="display:none;color:red">Fans disabled due to low voltage</p><label for="ductFanGauge">Duct Fan Speed %</label><div class="fan-control" id="ductFanGaugeContainer" style="width:150px;height:150px;position:relative;margin:10px auto"><canvas id="ductFanGauge" width="150" height="150"></canvas><div id="ductFanGaugeValue" class="gauge-value">0%</div></div><button id="ductFanControlToggle" class="fan-toggle active" onclick="toggleFanControl('duct')">Auto</button><label for="wallFanGauge">Wall Fan Speed %</label><div class="fan-control" id="wallFanGaugeContainer" style="width:150px;height:150px;position:relative;margin:10px auto"><canvas id="wallFanGauge" width="150" height="150"></canvas><div id="wallFanGaugeValue" class="gauge-value">0%</div></div><button id="wallFanControlToggle" class="fan-toggle active" onclick="toggleFanControl('wall')">Auto</button></div></div><div style="text-align:center" class="tank"><h2>Fuel Consumption</h2><p>Tank Used: <span id="tankFuel">0</span></p><p>Current Usage: <span id="currentUsage">0</span></p><p>Tank Avg: <span id="avgGPH">0.00</span></p><p>Tank Runtime: <span id="tankruntime">0.00</span></p><p>Lifetime: <span id="lifetimeFuel">0</span></p><button onclick="resetTank()">Reset Tank</button><h2>Tank Management</h2><p>Current Tank Size: <span id="currentTankSize">0</span></p><input type="number" id="tankSizeInput" min="0" step="0.1"><button onclick="setTankSize()">Set Tank Size</button></div><canvas id="tempChart" width="400" height="200"></canvas><canvas id="voltageChart" width="400" height="150"></canvas><div class="file-area"><h2>File Upload</h2><form method="POST" action="/upload" enctype="multipart/form-data"><input type="file" name="data"/><input type="submit" name="upload" value="Upload" title="Upload File"></form><p>Please wait after clicking upload; there's no progress indicator. The page will refresh to show the uploaded file.</p><p>Files might not upload if too large or if the filename contains special characters.</p><p>Check serial output for upload progress.</p></div><div id="fileListing"><h2>Files in SPIFFS:</h2><button id="listFilesBtn">List Files</button><table id="fileTable"><thead><tr><th>Name</th><th>Size</th></tr></thead><tbody id="fileListBody"></tbody></table></div><script>const ML_TO_GALLON=0.000264172;let fanControlStates={duct:false,wall:false};function drawGauge(canvasId,percent){const canvas=document.getElementById(canvasId);if(!canvas){console.error(`Canvas ${canvasId} not found`);return}const ctx=canvas.getContext('2d'),width=canvas.width,height=canvas.height,centerX=width/2,centerY=height*0.75,lineWidth=20,radius=Math.min(width,height)*0.4-lineWidth/2,startAngle=Math.PI,maxAngle=Math.PI;ctx.clearRect(0,0,width,height);ctx.beginPath();ctx.arc(centerX,centerY,radius,startAngle,startAngle+maxAngle);ctx.lineWidth=lineWidth;ctx.strokeStyle='#555';ctx.stroke();const fillAngle=(percent/100)*Math.PI;ctx.beginPath();ctx.arc(centerX,centerY,radius,startAngle,startAngle+fillAngle);const gradient=ctx.createLinearGradient(centerX-radius,centerY,centerX+radius,centerY);gradient.addColorStop(0,'yellow');gradient.addColorStop(1,'red');ctx.lineWidth=lineWidth;ctx.strokeStyle=gradient;ctx.stroke();console.log(`Drew ${canvasId} at ${percent}%`)}function updateFanSpeed(fanType,percent){percent=Math.round(parseFloat(percent)/5)*5;if(percent<0||percent>100)return;drawGauge(fanType+'FanGauge',percent);document.getElementById(fanType+'FanGaugeValue').textContent=percent+'%';if(fanControlStates[fanType]){fetch('/setFanSpeed',{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:`${fanType}Speed=${percent}`}).then(response=>response.text()).then(data=>console.log(data)).catch(error=>console.error('Error:',error))}}function handleGaugeInteraction(fanType,event){if(!fanControlStates[fanType]){console.log(`${fanType} gauge: Not in manual mode, ignoring click`);return}const canvas=document.getElementById(fanType+'FanGauge'),rect=canvas.getBoundingClientRect(),centerX=rect.width/2,centerY=rect.height*0.75,x=event.clientX-rect.left-centerX,y=event.clientY-rect.top-centerY;let angle=Math.atan2(y,x);angle=(angle<0?angle+2*Math.PI:angle);angle=(angle<=Math.PI?Math.PI-angle:angle-Math.PI);angle=Math.max(0,Math.min(Math.PI,angle));const percent=Math.round((angle/Math.PI)*100/5)*5;console.log(`${fanType} gauge clicked: x=${x.toFixed(1)}, y=${y.toFixed(1)}, angle=${(angle*180/Math.PI).toFixed(0)}°, percent=${percent}`);updateFanSpeed(fanType,percent)}function toggleFanControl(fanType){fanControlStates[fanType]=!fanControlStates[fanType];const button=document.getElementById(fanType+'FanControlToggle');if(fanControlStates[fanType]){button.textContent='Manual';button.classList.remove('active');button.style.backgroundColor='#d35400'}else{button.textContent='Auto';button.classList.add('active');button.style.backgroundColor='#e67e22'}fetch('/setFanControlMode',{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:`fan=${fanType}&mode=${fanControlStates[fanType]?'manual':'auto'}`}).then(response=>response.text()).then(data=>console.log(data)).catch(error=>console.error('Error:',error))}function formatUptime(seconds){let days=Math.floor(seconds/(24*3600));seconds%=(24*3600);let hours=Math.floor(seconds/3600);seconds%=3600;let minutes=Math.floor(seconds/60);return `${days}:${hours.toString().padStart(2,'0')}:${minutes.toString().padStart(2,'0')}`}function setTemp(value){var xhr=new XMLHttpRequest();xhr.open("POST","/settemp");xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xhr.send("temp="+value);var tempSlider=document.getElementById("tempSlider");if(tempSlider)tempSlider.value=value;updateTempDisplay(value)}function updateTempDisplay(value){var display=document.getElementById("setTemperatureDisplay");if(display)display.textContent=value}function setWallTempTrigger(){var triggerInput=document.getElementById("wallTempTriggerInput");if(triggerInput){var triggerValue=triggerInput.value;if(!isNaN(triggerValue)&&triggerValue>=-1&&triggerValue<=10){var xhr=new XMLHttpRequest();xhr.open("POST","/setWallTempTrigger");xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xhr.send("trigger="+triggerValue);document.getElementById("currentWallTempTrigger").textContent=triggerValue}}}function toggleFrostMode(enabled){var xhr=new XMLHttpRequest();xhr.open("POST","/frostMode");xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xhr.send("enable="+enabled)}function toggleThermostat(enabled){var label=document.getElementById("thermostatLabel"),newState=enabled;console.log("Toggling thermostat. New state: "+newState);var xhr=new XMLHttpRequest();xhr.open("POST","/toggleThermostat");xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xhr.send("enable="+newState);xhr.onload=function(){if(xhr.status===200){console.log("Thermostat toggle request successful");label.textContent=newState?"Thermostat On":"Thermostat Off";label.classList.toggle("active",newState);document.getElementById("thermostatEnable").checked=newState}else{console.error("Failed to toggle thermostat. Status: "+xhr.status);document.getElementById("thermostatEnable").checked=!newState}};xhr.onerror=function(){console.error("Network error while toggling thermostat");document.getElementById("thermostatEnable").checked=!newState}}function primePump(action){var xhr=new XMLHttpRequest();xhr.open("POST","/primepump",true);xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xhr.send("action="+action)}function setTankSize(){var tankSizeInput=document.getElementById("tankSizeInput");if(tankSizeInput){var tankSize=tankSizeInput.value;if(!isNaN(tankSize)&&tankSize>0){var xhr=new XMLHttpRequest();xhr.open("POST","/setTankSize");xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xhr.send("size="+tankSize);var currentTankSize=document.getElementById("currentTankSize");if(currentTankSize)currentTankSize.textContent=tankSize}}}function resetTank(){var xhr=new XMLHttpRequest();xhr.open("POST","/resetTank");xhr.send()}function shutdownHeater(){var xhr=new XMLHttpRequest();xhr.open("POST","/shutdownHeater");xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xhr.onload=function(){if(xhr.status===200){console.log("Heater shutdown command sent");document.getElementById("message").textContent="Heater shutdown command sent";document.getElementById("message").style.display="inline-block"}};xhr.send()}document.addEventListener('DOMContentLoaded',function(){var tempSlider=document.getElementById("tempSlider"),lastUpdateTime=0,intervalId;drawGauge('ductFanGauge',0);drawGauge('wallFanGauge',0);document.getElementById('ductFanGauge').addEventListener('click',e=>handleGaugeInteraction('duct',e));document.getElementById('wallFanGauge').addEventListener('click',e=>handleGaugeInteraction('wall',e));const customLocale={localize:{month:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],day:['Sun','Mon','Tue','Wed','Thu','Fri','Sat']},formatLong:{date:()=>'MM/dd/yyyy',time:()=>'HH:mm:ss',dateTime:()=>'MM/dd/yyyy HH:mm:ss'}};var ctx=document.getElementById('tempChart').getContext('2d'),tempChart=new Chart(ctx,{type:'line',data:{labels:[],datasets:[{label:'Temperature (°F)',data:[],fill:false,borderColor:'orange',tension:0.1}]},options:{scales:{x:{type:'time',time:{unit:'minute',displayFormats:{minute:'HH:mm'},tooltipFormat:'HH:mm'},adapters:{date:{locale:customLocale}},title:{display:false,text:'Time'}},y:{title:{display:false,text:'Temperature (°F)',color:'white'}}},plugins:{legend:{labels:{color:'grey'}}}},plugins:[{beforeDraw:chart=>{const ctx=chart.canvas.getContext('2d');ctx.save();ctx.globalCompositeOperation='destination-over';ctx.fillStyle='lightyellow';ctx.fillRect(0,0,chart.width,chart.height);ctx.restore()}}]}),ctxVoltage=document.getElementById('voltageChart').getContext('2d'),voltageChart=new Chart(ctxVoltage,{type:'line',data:{labels:[],datasets:[{label:'Voltage (V)',data:[],fill:false,borderColor:'blue',tension:0.1}]},options:{scales:{x:{type:'time',time:{unit:'minute',displayFormats:{minute:'HH:mm'},tooltipFormat:'HH:mm'},adapters:{date:{locale:customLocale}},title:{display:false,text:'Time'}},y:{title:{display:false,text:'Voltage (V)',color:'white'},suggestedMin:9,suggestedMax:15,ticks:{callback:function(value){return value+'V'}}}},plugins:{legend:{labels:{color:'grey'}}}},plugins:[{beforeDraw:chart=>{const ctx=chart.canvas.getContext('2d');ctx.save();ctx.globalCompositeOperation='destination-over';ctx.fillStyle='lightyellow';ctx.fillRect(0,0,chart.width,chart.height);ctx.restore()}}]});if(tempSlider){tempSlider.oninput=function(){var value=this.value;updateTempDisplay(value)};tempSlider.onchange=function(){setTemp(this.value)}}function updateSliderAndDisplay(data){if(tempSlider){tempSlider.value=data.setTemp.toFixed(0);updateTempDisplay(data.setTemp.toFixed(0))}}var evtSource=new EventSource("/events");evtSource.onmessage=function(e){console.log("Event received:",e.data);if(e.data&&typeof e.data==='string'&&e.data.trim()!==''){try{var eventLines=e.data.split('\n');if(eventLines.length<2){console.error("Received malformed SSE event:",e.data);return}var eventNameLine=eventLines[0].split(': '),eventDataLine=eventLines[1].split(': ');if(eventNameLine[0]!=='event'||!eventNameLine[1]||eventDataLine[0]!=='data'||!eventDataLine[1]){console.error("Invalid event format:",e.data);return}var eventName=eventNameLine[1],eventData=eventDataLine[1];if(eventName==='heater_update'){var data=JSON.parse(eventData),currentTime=new Date().getTime();if(currentTime-lastUpdateTime>=20000){lastUpdateTime=currentTime;updateSliderAndDisplay(data)}document.getElementById("currentTemp").textContent=data.currentTemp.toFixed(1)+"°F";document.getElementById("heaterState").textContent=data.state;document.getElementById("runtime").textContent=data.heaterHourMeter.toFixed(2)+"Hrs";document.getElementById("currentTime").querySelector("span").textContent=data.time;document.getElementById("currentDate").querySelector("span").textContent=data.date;document.getElementById("currentWallTempTrigger").textContent=data.walltemptrigger.toFixed(0);document.getElementById("uptime").querySelector("span").textContent=formatUptime(parseInt(data.uptime));document.getElementById("lifetimeFuel").textContent=data.fuelConsumedLifetime.toFixed(2)+" Gal";document.getElementById("tankFuel").textContent=data.fuelConsumedTank.toFixed(3)+" Gal";document.getElementById("currentUsage").textContent=data.currentUsage.toFixed(3)+" GPH";document.getElementById("currentTankSize").textContent=data.tankSizeGallons.toFixed(0)+"Gal";document.getElementById("avgGPH").textContent=data.averageGPH.toFixed(2)+"GPH";document.getElementById("fanSpeed").textContent=data.fanSpeed+"RPM";document.getElementById("supplyVoltage").textContent=data.supplyVoltage.toFixed(1)+"V";document.getElementById("voltageWarning").textContent=data.voltageWarning;document.getElementById("glowPlugHours").textContent=data.glowPlugHours.toFixed(2)+"Hrs";document.getElementById("frostMode").checked=data.frostMode;document.getElementById("rollingAvgGPH").textContent=data.rollingAvgGPH.toFixed(2)+" GPH";document.getElementById("rollingRuntimeHours").textContent=(data.rollingRuntimeHours===null?'∞':data.rollingRuntimeHours.toFixed(2))+" Hrs";document.getElementById("tankruntime").textContent=data.remainingRuntimeHours.toFixed(2)+"Hrs";var errorElement=document.getElementById("heatererror");if(data.errornum>1){document.getElementById("heatererrortxt").textContent=data.error||"Unknown Error";errorElement.style.display="inline-block"}else{document.getElementById("heatererrortxt").textContent="";errorElement.style.display="none"}const fanStatus=document.getElementById("fanStatus"),ductGauge=document.getElementById("ductFanGauge"),wallGauge=document.getElementById("wallFanGauge");if(!data.voltagegood){fanStatus.style.display="block";ductGauge.style.pointerEvents='none';wallGauge.style.pointerEvents='none'}else{fanStatus.style.display="none";ductGauge.style.pointerEvents=fanControlStates.duct?'auto':'none';wallGauge.style.pointerEvents=fanControlStates.wall?'auto':'none'}fanControlStates.duct=data.ductFanManualControl;const ductButton=document.getElementById('ductFanControlToggle');if(fanControlStates.duct){ductButton.textContent='Manual';ductButton.style.backgroundColor='#d35400';const ductPwm=data.manualDuctFanSpeed,ductVoltageRange=data.supplyVoltage-6.0,ductPercent=ductPwm===0?0:Math.round(((data.manualDuctFanVoltage-6.0)/ductVoltageRange)*95+5);drawGauge('ductFanGauge',ductPercent);document.getElementById('ductFanGaugeValue').textContent=ductPercent+'%';document.getElementById('ductfan').textContent=ductPwm+" ("+data.manualDuctFanVoltage.toFixed(1)+"V)"}else{ductButton.textContent='Auto';ductButton.style.backgroundColor='#e67e22';drawGauge('ductFanGauge',0);document.getElementById('ductFanGaugeValue').textContent='0%';switch(data.ductfan){case 0:document.getElementById('ductfan').textContent="Off";break;case 1:document.getElementById('ductfan').textContent="Low";break;case 2:document.getElementById('ductfan').textContent="Medium";break;case 3:document.getElementById('ductfan').textContent="High";break;default:document.getElementById('ductfan').textContent="Unknown"}}fanControlStates.wall=data.wallFanManualControl;const wallButton=document.getElementById('wallFanControlToggle');if(fanControlStates.wall){wallButton.textContent='Manual';wallButton.style.backgroundColor='#d35400';const wallPwm=data.manualWallFanSpeed,wallVoltageRange=data.supplyVoltage-6.0,wallPercent=wallPwm===0?0:Math.round(((data.manualWallFanVoltage-6.0)/wallVoltageRange)*95+5);drawGauge('wallFanGauge',wallPercent);document.getElementById('wallFanGaugeValue').textContent=wallPercent+'%';document.getElementById('wallfan').textContent=wallPwm+" ("+data.manualWallFanVoltage.toFixed(1)+"V)"}else{wallButton.textContent='Auto';wallButton.style.backgroundColor='#e67e22';drawGauge('wallFanGauge',0);document.getElementById('wallFanGaugeValue').textContent='0%';switch(data.wallfan){case 0:document.getElementById('wallfan').textContent="Off";break;case 1:document.getElementById('wallfan').textContent="Low";break;case 2:document.getElementById('wallfan').textContent="Medium";break;case 3:document.getElementById('wallfan').textContent="High";break;default:document.getElementById('wallfan').textContent="Unknown"}}var thermostatLabel=document.getElementById("thermostatLabel");thermostatLabel.textContent=data.controlEnable?"Thermostat On":"Thermostat Off";thermostatLabel.classList.toggle("active",data.controlEnable);document.getElementById("thermostatEnable").checked=data.controlEnable;document.getElementById("heaterInternalTemp").textContent=(data.heaterinternalTemp*9/5+32).toFixed(1)+"°F";document.getElementById("glowPlugCurrent").textContent=data.glowPlugCurrent_Amps.toFixed(2);document.getElementById("pumpHz").textContent=data.pumpHz.toFixed(1);document.getElementById("walltemp").textContent=data.walltemp.toFixed(1);var tankSizeGallons=data.tankSizeGallons,fuelConsumedTank=data.fuelConsumedTank,gallonsLeft=tankSizeGallons>0?tankSizeGallons-fuelConsumedTank:0;gallonsLeft=Math.max(0,gallonsLeft);var fuelPercentage=tankSizeGallons>0?(gallonsLeft/tankSizeGallons)*100:0;fuelPercentage=Math.max(0,Math.min(100,fuelPercentage));document.getElementById("fuelGallonsLeft").textContent=gallonsLeft.toFixed(2)+" Gal";var rotation=(fuelPercentage/100)*180;document.getElementById("fuelGaugeFill").style.transform=`rotate(${rotation}deg)`;var fuelGaugeFill=document.getElementById("fuelGaugeFill");if(fuelPercentage<10)fuelGaugeFill.style.backgroundColor="#FF0000";else if(fuelPercentage<25)fuelGaugeFill.style.backgroundColor="#FFA500";else if(fuelPercentage<50)fuelGaugeFill.style.backgroundColor="#FFFF";else fuelGaugeFill.style.backgroundColor="#327A24";var messageDiv=document.getElementById("message");if(tankSizeGallons>0&&fuelConsumedTank>=tankSizeGallons*0.90){messageDiv.textContent="Warning: Fuel level is low!";messageDiv.style.display="inline-block"}if(data.tempHistory){var tempHistory=JSON.parse(data.tempHistory);tempChart.data.labels=tempHistory.timestamps.map(t=>new Date(Date.now()-(t*1000)));tempChart.data.datasets[0].data=tempHistory.tempHistory;tempChart.update()}if(data.voltageHistory){var voltageHistory=JSON.parse(data.voltageHistory);voltageChart.data.labels=voltageHistory.timestamps.map(t=>new Date(Date.now()-(t*1000)));voltageChart.data.datasets[0].data=voltageHistory.voltageHistory;const minVoltage=Math.min(...voltageHistory.voltageHistory);if(minVoltage<10){voltageChart.options.scales.y.suggestedMin=Math.floor(minVoltage)-1}else{voltageChart.options.scales.y.suggestedMin=10}voltageChart.options.scales.y.suggestedMax=15;voltageChart.update()}clearInterval(intervalId);intervalId=setInterval(()=>{var xhr=new XMLHttpRequest();xhr.open("GET","/getcurrenttemp",true);xhr.onload=function(){if(xhr.status===200){var tempData=JSON.parse(xhr.responseText);updateSliderAndDisplay(tempData)}};xhr.send()},20000)}}catch(error){console.error("Error processing SSE event:",error,"Raw data:",e.data)}}};var listFilesBtn=document.getElementById('listFilesBtn');if(listFilesBtn){listFilesBtn.addEventListener('click',function(){var xhr=new XMLHttpRequest();xhr.open("GET","/listfiles",true);xhr.onload=function(){if(xhr.status===200){var fileList=JSON.parse(xhr.responseText);updateFileList(fileList.files)}};xhr.send()})}function updateFileList(data){var tableBody=document.getElementById('fileListBody');if(tableBody){tableBody.innerHTML='';data.forEach(function(file){var row=tableBody.insertRow(),nameCell=row.insertCell(0),sizeCell=row.insertCell(1);nameCell.textContent=file.name;sizeCell.textContent=file.size})}}evtSource.onerror=function(e){console.error("EventSource failed:",e)};evtSource.onopen=function(e){console.log("EventSource connection opened")}})</script><script src="/chart.js"></script><script src="/chartjs-adapter-date.js"></script><script src="/index.js"></script></body></html>)rawliteral";

#endif // INDEX_HTML_H